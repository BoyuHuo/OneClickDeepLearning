server.port=10006
local.port.first=10000
local.port.last=10500
local.ip=0.0.0.0
template.path=D://template/
data.path=D://resources_cx/persistence

#APPLICATIONS_DIR
APPLICATIONS_DIR.USER_SPACE =/home/hadoop/mount/UserSpace/
APPLICATIONS_DIR.STAGE_SPACE =/Staging

#PERSISTENCE
ALGORITHMS =/algorithms
PROJECT =/project
USERS =/users
USER_ID_GENERATOR =/user_id_generator
NEW_MODEL =/new_model
REJECTED_MODELS =/rejected_model

#K8
K8S.VIRTUAL.MASTER =172.31.24.77
K8S.VIRTUAL.CPU =172.31.24.77
K8S.VIRTUAL.GPU =172.31.24.77
K8S.PUBLIC.MASTER =34.229.75.10
K8S.PUBLIC.CPU =34.229.75.10
K8S.PUBLIC.GPU =34.229.75.10

#HDFS
HDFS.IP_ADDRESS =hdfs://10.8.0.14:9000
HDFS.USER_SPACE =/UserSpace/
HDFS.USER_NAME =hadoop

#KAFKA
KAFKA.TOPIC = "mdmsg";
KAFKA.KAFKA_URL = "ec2-35-171-163-170.compute-1.amazonaws.com:9092";
zookeeper.server.url= ec2-35-171-163-170.compute-1.amazonaws.com:2181


#log setting
logging.level.root= DEBUG
logging.level.org.springframework.web= DEBUG
logging.file = ocdl_cx.log
logging.path = ./logs
logging.pattern.file= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
logging.pattern.console= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100GB
spring.servlet.multipart.max-request-size=100GB

#AWS S3 service
S3.server.accesskey = <accesskey>
S3.server.secretkey = <secretkey>
S3.server.bucketName = <bucketname>



